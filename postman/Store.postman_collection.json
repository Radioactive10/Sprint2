{
	"info": {
		"_postman_id": "2367f533-31cc-4e26-8485-643622c68440",
		"name": "Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21164961"
	},
	"item": [
		{
			"name": "DeletePurchaseByID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"store\", \"/v2/store\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://088e051f-80a4-46f7-822d-e13b21104b35.mock.pstmn.io{{store}}/order/12",
					"protocol": "https",
					"host": [
						"088e051f-80a4-46f7-822d-e13b21104b35",
						"mock",
						"pstmn",
						"io{{store}}"
					],
					"path": [
						"order",
						"12"
					]
				}
			},
			"response": [
				{
					"name": "DeletePurchaseByID",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/v2/store/order/12",
							"host": [
								"{{url}}"
							],
							"path": [
								"v2",
								"store",
								"order",
								"12"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "Purchase Deleted Successfully"
				}
			]
		},
		{
			"name": "PlaceOrderForPet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"store\", \"/v2/store\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"petId\": 0,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"2022-06-02T06:41:26.706Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}/order",
					"host": [
						"{{url}}{{store}}"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReturnPetInvertiers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"store\", \"/v2/store\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{store}}/inventory",
					"host": [
						"{{url}}{{store}}"
					],
					"path": [
						"inventory"
					]
				}
			},
			"response": []
		},
		{
			"name": "FindPurchaseById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    status=jsonData.status;\r",
							"});\r",
							"\r",
							"console.log(\"the order status is :\",status);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"store\", \"/v2/store\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{store}}/order/10",
					"host": [
						"{{url}}{{store}}"
					],
					"path": [
						"order",
						"10"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 3000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(3000);",
					"});"
				]
			}
		}
	]
}